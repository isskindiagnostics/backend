trigger:
  branches:
    include:
      - main

pool:
  vmImage: "ubuntu-latest"

variables:
  COMPOSE_FILE: docker-compose.yml
  NODE_API_URL: http://localhost:80/analyze

steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: "3.x"
    displayName: "Use Python"

  - task: DockerInstaller@0
    displayName: Install Docker

  - script: |
      echo "Validating docker-compose file..."
      docker-compose -f $(COMPOSE_FILE) config
    displayName: "Validate docker-compose syntax"

  - script: |
      echo "Building all services..."
      docker-compose -f $(COMPOSE_FILE) build --no-cache
    displayName: "Build all Docker services"

  - script: |
      echo "Starting services..."
      docker-compose -f $(COMPOSE_FILE) up -d
    displayName: "Start containers (for test)"

  - script: |
      echo "Waiting for node-api to be ready..."
      for i in {1..10}; do
        curl -s --fail $(NODE_API_URL) || sleep 3
      done
      echo "Node API is reachable"
    displayName: "Healthcheck on /analyze"
    continueOnError: false

  - script: |
      echo "Stopping test containers..."
      docker-compose -f $(COMPOSE_FILE) down
    displayName: "Cleanup (docker-compose down)"

  - task: AzureWebAppContainer@1
    displayName: "Deploy to Azure Web App (Docker Compose)"
    inputs:
      azureSubscription: "isskin-backend-connection"
      appName: "isskin-backend-app"
      multicontainerConfigType: "Compose"
      multicontainerConfigFile: "docker-compose.yml"
